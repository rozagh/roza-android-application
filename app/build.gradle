buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath "com.google.gms:google-services:4.2.0"
        classpath "com.github.triplet.gradle:play-publisher:2.0.0-SNAPSHOT"
        classpath "gradle.plugin.firebase.test.lab:plugin:1.1.5"
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: "com.github.triplet.play"
apply plugin: 'firebase.test.lab'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    jcenter()
    google()
    maven { url "https://plugins.gradle.org/m2/" }
}

def keystorePropertiesFile = rootProject.file("signing/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile));

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.roza.myfirstapp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 6
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    play {
        serviceAccountCredentials = rootProject.file("signing/google-service-account.json")
        releaseStatus = "draft"
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            versionNameSuffix "-build" + getDate()
            signingConfig signingConfigs.config
        }
        beta {
            initWith release
            signingConfig signingConfigs.config
            ext.betaDistributionGroupAliases="testers"
            minifyEnabled false
            versionNameSuffix "beta-build" + getDate()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    firebaseTestLab {
        keyFile = rootProject.file("signing/testlab-service-account.json")
        googleProjectId = "fastlaneci"
        cloudBucketName = "roza_android_build_cache"
        cloudDirectoryName= "testlab-files"

        devices {
            pixleEmulator {
                deviceIds = ["sailfish"]
                androidApiLevels = [28]
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
}
